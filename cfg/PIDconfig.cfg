#!/usr/bin/env python
PACKAGE = "flytbase_assignment"

from dynamic_reconfigure.parameter_generator_catkin import *

# Initialize the parameter generator
gen = ParameterGenerator()

# Define scaling options for the PID gains
K_scale_enum = gen.enum([
    gen.const("scale_tenth", double_t, 0.1, "Scale by 0.1"),
    gen.const("scale_unity", double_t, 1.0, "No scaling"),
    gen.const("scale_ten", double_t, 10.0, "Scale by 10"),
    gen.const("scale_hundred", double_t, 100.0, "Scale by 100")
], "Scale factor for K setting")

# Angle PID Gains with scaling options
gen.add("Kp_angle_scale", double_t, 0, "Kp scale", 10, 0.1, 100, edit_method=K_scale_enum)
gen.add("Kp_angle", double_t, 0, "Kp for angle", 0.1, -1, 1)
gen.add("Ki_angle_scale", double_t, 0, "Ki scale", 10, 0.1, 100, edit_method=K_scale_enum)
gen.add("Ki_angle", double_t, 0, "Ki for angle", 0.1, -1, 1)
gen.add("Kd_angle_scale", double_t, 0, "Kd scale", 10, 0.1, 100, edit_method=K_scale_enum)
gen.add("Kd_angle", double_t, 0, "Kd for angle", 0.1, -1, 1)

# Distance PID Gains with scaling options
gen.add("Kp_distance_scale", double_t, 0, "Kp scale", 10, 0.1, 100, edit_method=K_scale_enum)
gen.add("Kp_distance", double_t, 0, "Kp for distance", 0.1, -1, 1)
gen.add("Ki_distance_scale", double_t, 0, "Ki scale", 10, 0.1, 100, edit_method=K_scale_enum)
gen.add("Ki_distance", double_t, 0, "Ki for distance", 0.1, -1, 1)
gen.add("Kd_distance_scale", double_t, 0, "Kd scale", 10, 0.1, 100, edit_method=K_scale_enum)
gen.add("Kd_distance", double_t, 0, "Kd for distance", 0.1, -1, 1)

# Exit after generating the config file
exit(gen.generate(PACKAGE, "flytbase_assignment", "PIDconfig"))

